apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-role
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-role
subjects:
- kind: ServiceAccount
  name: prometheus-sa
  namespace: ufo-ns
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: ufo-prometheus
spec:
  serviceAccountName: prometheus-sa
  serviceMonitorNamespaceSelector: {}  # auto discover accross all namespaces
  # serviceMonitorNamespaceSelector:
  #   matchLabels:
  #     name: ufo
  serviceMonitorSelector: {}  # auto discover all service monitors
  #   matchLabels:
  #     env: staging
  podMonitorSelector: {}  # auto discover all pod monitors
  resources:
    requests:
      memory: 300Mi

  enableAdminAPI: true
